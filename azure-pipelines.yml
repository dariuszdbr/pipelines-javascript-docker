trigger:
  branches:
    include:
      - refs/heads/master
      - refs/tags/release-*

pr: none

variables:
  devDockerRegistryServiceConnection: 'devddacr'
  qaDockerRegistryServiceConnection: 'qaddacr'
  imageRepository: 'iiotfactoryconnectivity050zmq'
  dockerfilePath: '$(Build.SourcesDirectory)/app2/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
  - stage: dev
    displayName: 'DEV - Build and Push docker image'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    # variables:
    #   - template: ../variables/dev.yml
    #   - group: dev_env_secrets
    jobs:
    - job: build_and_push_docker_image
      displayName: Build
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: Docker@2
        displayName: Build and push app image to container registry
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          containerRegistry: $(devDockerRegistryServiceConnection)
          tags: |
            $(tag)

  - stage: qa
    displayName: 'QA - Build and Push docker image'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/release-')
    # variables:
    #   - template: ../variables/qa.yml
    #   - group: qa_env_secrets
    jobs:
    - job: build_and_push_docker_image
      displayName: Build
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: Docker@2
        displayName: Build and push app image to container registry
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          containerRegistry: $(qaDockerRegistryServiceConnection)
          tags: |
            $(tag)
  
