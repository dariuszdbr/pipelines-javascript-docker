# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master
- release-*

pr: none

variables:
  # Container registry service connection established during pipeline creation
  #devDockerRegistryServiceConnection: '551854d8-9088-4451-a7e6-4e4d83edf871'
  devDockerRegistryServiceConnection: 'devddacr'
  #qaDockerRegistryServiceConnection: '95ae0fe7-97d1-45af-9d84-5b7cb1b7d2fc'
  qaDockerRegistryServiceConnection: 'qaddacr'
  imageRepository: 'iiotfactoryconnectivity050zmq'
  devContainerRegistry: 'devddacr.azurecr.io'
  qacontainerRegistry: 'qaddacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/app2/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
  - stage: dev
    displayName: 'Build and Push docker image on Dev env'
    condition: eq(variables['Build.SourceBranch'], 'master')
    variables:
      - template: ../variables/dev.yml
      - group: dev_env_secrets
    jobs:
    - job: build_and_push_docker_image
      displayName: Build
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: Docker@2
        displayName: Build and push app image to container registry
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          containerRegistry: $(devDockerRegistryServiceConnection)
          tags: |
            $(tag)

  - stage: qa
    displayName: 'QA Environment CI'
    condition: startsWith(variables['Build.SourceBranch'], 'release-')
    variables:
      - template: ../variables/qa.yml
      - group: qa_env_secrets
    jobs:
    - job: build_and_push_docker_image
      displayName: Build
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: Docker@2
        displayName: Build and push app image to container registry
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          containerRegistry: $(qaDockerRegistryServiceConnection)
          tags: |
            $(tag)
  
